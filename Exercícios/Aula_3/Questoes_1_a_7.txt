

Para todas as questões, compile-as com o gcc e execute-as via terminal.

    1. Crie um "Olá mundo!" em C.
R:
#include <stdio.h>

int main (void)
{ 
	printf("Olá mundo\n");
}

    2. Crie um código em C que pergunta ao usuário o seu nome, e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':

$ ./ola_usuario_1
$ Digite o seu nome: Eu
$ Ola Eu

R:
#include <stdio.h>
#include <stdlib.h>

int main (void)
{
	char a[30];
	printf("Digite o seu nome:");
	scanf("%s",a);
	printf("Olá %s.\n",a);
}

    3. Apresente os comportamentos do código anterior nos seguintes casos:

(a) Se o usuário insere mais de um nome.

$ ./ola_usuario_1
$ Digite o seu nome: Eu Mesmo

R:
$ Digite o seu nome:Adolfo Serique
$ Olá Adolfo.

(b) Se o usuário insere mais de um nome entre aspas duplas. Por exemplo:

$ ./ola_usuario_1
$ Digite o seu nome: "Eu Mesmo"

R:
$ Digite o seu nome:"Adolfo Serique"
$ Olá "Adolfo.

(c) Se é usado um pipe. Por exemplo:

$ echo Eu | ./ola_usuario_1

R:
$ Digite o seu nome:Olá Adolfo.

(d) Se é usado um pipe com mais de um nome. Por exemplo:

$ echo Eu Mesmo | ./ola_usuario_1

R:
$ Digite o seu nome:Olá Adolfo.

(e) Se é usado um pipe com mais de um nome entre aspas duplas. Por exemplo:

$ echo "Eu Mesmo" | ./ola_usuario_1

R:
$ Digite o seu nome:Olá Adolfo.

(f) Se é usado o redirecionamento de arquivo. Por exemplo:

$ echo Ola mundo cruel! > ola.txt
$ ./ola_usuario_1 < ola.txt

R:
$ Digite o seu nome:Olá Ola.

    4. Crie um código em C que recebe o nome do usuário como um argumento de entrada (usando as variáveis argc e *argv[]), e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':

$ ./ola_usuario_2 Eu
$ Ola Eu

R:
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char **argv)
{
	printf("Olá %s.\n", argv[1]);
	return 0;
}

    5. Apresente os comportamentos do código anterior nos seguintes casos:

(a) Se o usuário insere mais de um nome.

$ ./ola_usuario_2 Eu Mesmo

R:
$ Olá Adolfo.

(b) Se o usuário insere mais de um nome entre aspas duplas. Por exemplo:

$ ./ola_usuario_2 "Eu Mesmo"

R:
$ Olá Adolfo Serique.

(c) Se é usado um pipe. Por exemplo:

$ echo Eu | ./ola_usuario_2

R:
$ Olá (null).

(d) Se é usado um pipe com mais de um nome. Por exemplo:

$ echo Eu Mesmo | ./ola_usuario_2

R:
$ Olá (null).

(e) Se é usado um pipe com mais de um nome entre aspas duplas. Por exemplo:

$ echo Eu Mesmo | ./ola_usuario_2

R:
$ Olá (null).

(f) Se é usado o redirecionamento de arquivo. Por exemplo:

$ echo Ola mundo cruel! > ola.txt
$ ./ola_usuario_2 < ola.txt

R:
$ Olá (null).

    6. Crie um código em C que faz o mesmo que o código da questão 4, e em seguida imprime no terminal quantos valores de entrada foram fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_3':

$ ./ola_usuario_3 Eu
$ Ola Eu
$ Numero de entradas = 2

R:
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char **argv)
{
	printf("Olá %s.\n", argv[1]);
	printf("Numero de entradas = %d\n", argc);
	return 0;
}

    7. Crie um código em C que imprime todos os argumentos de entrada fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_argumentos':

$ ./ola_argumentos Eu Mesmo e Minha Pessoa
$ Argumentos: Eu Mesmo e Minha Pessoa

R:
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char **argv)
{
	int i;
	printf("Argumentos: ");
	for (i=1; i<argc; i++)
	{
		printf("%s ", argv[i]);
	}
	printf("\b.");
	printf("\n");
	return 0;
}

    8. Crie uma função que retorna a quantidade de caracteres em uma string, usando o seguinte protótipo: int Num_Caracs(char *string); Salve-a em um arquivo separado chamado 'num_caracs.c'. Salve o protótipo em um arquivo chamado 'num_caracs.h'. Compile 'num_caracs.c' para gerar o objeto 'num_caracs.o'.

    9. Re-utilize o objeto criado na questão 8 para criar um código que imprime cada argumento de entrada e a quantidade de caracteres de cada um desses argumentos. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_1':

$ ./ola_num_caracs_1 Eu Mesmo
$ Argumento: ./ola_num_caracs_1 / Numero de caracteres: 18
$ Argumento: Eu / Numero de caracteres: 2
$ Argumento: Mesmo / Numero de caracteres: 5

    10. Crie um Makefile para a questão anterior.

    11. Re-utilize o objeto criado na questão 8 para criar um código que imprime o total de caracteres nos argumentos de entrada. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_2':

$ ./ola_num_caracs_2 Eu Mesmo
$ Total de caracteres de entrada: 25

    12. Crie um Makefile para a questão anterior.


